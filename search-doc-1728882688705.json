[{"title":"basic_prop","type":0,"sectionRef":"#","url":"/luau-props/api/basic_prop","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"basic_prop","url":"/luau-props/api/basic_prop#functions","content":" "},{"title":"get​","type":1,"pageTitle":"basic_prop","url":"/luau-props/api/basic_prop#get","content":"&lt;/&gt; basic_prop:get(...: any) → T Returns the current value of the property.  "},{"title":"set​","type":1,"pageTitle":"basic_prop","url":"/luau-props/api/basic_prop#set","content":"&lt;/&gt; basic_prop:set( new_value: T, ...: any ) → () Sets the value of the property to the new value. "},{"title":"module","type":0,"sectionRef":"#","url":"/luau-props/api/module","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"module","url":"/luau-props/api/module#types","content":" "},{"title":"module​","type":1,"pageTitle":"module","url":"/luau-props/api/module#module","content":"&lt;/&gt; type module = {} A Luau script that returns exactly one value. "},{"title":"Properties​","type":1,"pageTitle":"module","url":"/luau-props/api/module#properties","content":" "},{"title":"t​","type":1,"pageTitle":"module","url":"/luau-props/api/module#t","content":"&lt;/&gt; module.t: module Runtime typechecker module. A dependency of the props module. Can be used to create validator functions for the type_validator property. Refer to the Github repository for more information.  "},{"title":"signal​","type":1,"pageTitle":"module","url":"/luau-props/api/module#signal","content":"&lt;/&gt; module.signal: module The signal module. A dependency of the props module. Can be used to create signals for the changed property. Refer to the documentation for more information. "},{"title":"Functions​","type":1,"pageTitle":"module","url":"/luau-props/api/module#functions","content":" "},{"title":"new​","type":1,"pageTitle":"module","url":"/luau-props/api/module#new","content":"&lt;/&gt; module:new(config: prop_setup&lt;T&gt;) → prop&lt;T&gt; Creates a new property with the given configuration. Refer to the prop_setup type for more information. "},{"title":"immutable_prop","type":0,"sectionRef":"#","url":"/luau-props/api/immutable_prop","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"immutable_prop","url":"/luau-props/api/immutable_prop#types","content":" "},{"title":"immutable_prop<T>​","type":1,"pageTitle":"immutable_prop","url":"/luau-props/api/immutable_prop#immutable_prop<T>","content":"&lt;/&gt; interface immutable_prop&lt;T&gt; { get: get&lt;T&gt; changed: var_signal } An immutable derivative of a prop object that cannot be changed after initialization. Contains a get accessor and a changed signal. "},{"title":"Properties​","type":1,"pageTitle":"immutable_prop","url":"/luau-props/api/immutable_prop#properties","content":" "},{"title":"changed​","type":1,"pageTitle":"immutable_prop","url":"/luau-props/api/immutable_prop#changed","content":"&lt;/&gt; immutable_prop.changed: var_signal   "},{"title":"changed​","type":1,"pageTitle":"immutable_prop","url":"/luau-props/api/immutable_prop#changed","content":"&lt;/&gt; immutable_prop.changed: var_signal  "},{"title":"Functions​","type":1,"pageTitle":"immutable_prop","url":"/luau-props/api/immutable_prop#functions","content":" "},{"title":"get​","type":1,"pageTitle":"immutable_prop","url":"/luau-props/api/immutable_prop#get","content":"&lt;/&gt; immutable_prop:get(...: any) → T Returns the current value of the property. "},{"title":"public_prop","type":0,"sectionRef":"#","url":"/luau-props/api/public_prop","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"public_prop","url":"/luau-props/api/public_prop#types","content":" "},{"title":"public_prop<T>​","type":1,"pageTitle":"public_prop","url":"/luau-props/api/public_prop#public_prop<T>","content":"&lt;/&gt; interface public_prop&lt;T&gt; { get: get&lt;T&gt; set: set&lt;T&gt; changed: var_signal } A public interface of a prop object that can be changed after initialization. Contains a get and a set accessor, and a changed signal. "},{"title":"Functions​","type":1,"pageTitle":"public_prop","url":"/luau-props/api/public_prop#functions","content":" "},{"title":"get​","type":1,"pageTitle":"public_prop","url":"/luau-props/api/public_prop#get","content":"&lt;/&gt; public_prop:get(...: any) → T Returns the current value of the property.  "},{"title":"set​","type":1,"pageTitle":"public_prop","url":"/luau-props/api/public_prop#set","content":"&lt;/&gt; public_prop:set( new_value: T, ...: any ) → () Sets the value of the property to the new value. "},{"title":"middleware","type":0,"sectionRef":"#","url":"/luau-props/api/middleware","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"middleware","url":"/luau-props/api/middleware#types","content":" "},{"title":"transformer<T>​","type":1,"pageTitle":"middleware","url":"/luau-props/api/middleware#transformer<T>","content":"&lt;/&gt; type transformer&lt;T&gt; = ( value: T, ...any? ) → ( T, boolean? ) A function that transforms a value. Returns the transformed value and an optional boolean flag to stop the transformation process.  "},{"title":"transformer_list<T>​","type":1,"pageTitle":"middleware","url":"/luau-props/api/middleware#transformer_list<T>","content":"&lt;/&gt; type transformer_list&lt;T&gt; = list&lt;transformer&lt;T&gt;&gt; A list of transformers that can be applied to a value.  "},{"title":"middleware<T>​","type":1,"pageTitle":"middleware","url":"/luau-props/api/middleware#middleware<T>","content":"&lt;/&gt; interface middleware&lt;T&gt; { get: ((index: number) → transformer&lt;T&gt;?)&amp;(() → transformer_list&lt;T&gt;) add: (( transformer: transformer&lt;T&gt;, index: number? ) → ())&amp;( list: transformer_list&lt;T&gt;, start_index: number? ) → () remove: ((index: number?) → ())&amp;( start_index: number?, end_index: number ) → () clear: () → () transform: ( value: T, ...any? ) → T }  "},{"title":"Functions​","type":1,"pageTitle":"middleware","url":"/luau-props/api/middleware#functions","content":" "},{"title":"add​","type":1,"pageTitle":"middleware","url":"/luau-props/api/middleware#add","content":"&lt;/&gt; middleware:add( transformer_arg: transformer&lt;T&gt; | transformer_list&lt;T&gt;, index?: number ) → () Adds a transformer to the middleware list. If an index is provided, the transformer will be inserted at that index. Alternatively, a list of transformers can be provided as the first argument to add multiple transformers at once. Index defaults to the end of the list.  "},{"title":"remove​","type":1,"pageTitle":"middleware","url":"/luau-props/api/middleware#remove","content":"&lt;/&gt; middleware:remove( index?: number, end_index?: number ) → () Removes a transformer from the middleware list. If an end_index is provided, all transformers from index to end_index will be removed. If no arguments are provided, the transformer at the end of the list will be removed.  "},{"title":"get​","type":1,"pageTitle":"middleware","url":"/luau-props/api/middleware#get","content":"&lt;/&gt; middleware:get(index?: number) → transformer&lt;T&gt; | transformer_list&lt;T&gt; Returns the transformer at the specified index. If no index is provided, returns a list of all transformers.  "},{"title":"clear​","type":1,"pageTitle":"middleware","url":"/luau-props/api/middleware#clear","content":"&lt;/&gt; middleware:clear() → () Clears all transformers from the middleware list.  "},{"title":"transform​","type":1,"pageTitle":"middleware","url":"/luau-props/api/middleware#transform","content":"&lt;/&gt; middleware:transform( value: T, ...: any ) → T Applies all transformers in the middleware list to the value, returning the transformed value. If a transformer returns a second value of true, the transformation process will be stopped, skipping all remaining transformers and returning the current value. "},{"title":"types","type":0,"sectionRef":"#","url":"/luau-props/api/types","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"types","url":"/luau-props/api/types#types","content":" "},{"title":"table​","type":1,"pageTitle":"types","url":"/luau-props/api/types#table","content":"&lt;/&gt; type table = {[K]: V} A table with keys of type K and values of type V.  "},{"title":"list​","type":1,"pageTitle":"types","url":"/luau-props/api/types#list","content":"&lt;/&gt; type list = table&lt;number,T&gt; A list with values of type T.  "},{"title":"dict​","type":1,"pageTitle":"types","url":"/luau-props/api/types#dict","content":"&lt;/&gt; type dict = table&lt;string,T&gt; A dictionary with keys of type string and values of type T. "},{"title":"prop","type":0,"sectionRef":"#","url":"/luau-props/api/prop","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#types","content":" "},{"title":"var_signal​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#var_signal","content":"&lt;/&gt; type var_signal = signal | restricted_signal | immutable_signal Union type for signals with different security levels. Refer to signal documentation for more information.  "},{"title":"signal_security​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#signal_security","content":"&lt;/&gt; type signal_security = &quot;base&quot; | &quot;immutable&quot; | &quot;restricted&quot; A string that represents the security level of a signal. Can be &quot;base&quot;, &quot;immutable&quot;, or &quot;restricted&quot;.  "},{"title":"typecheck<T>​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#typecheck<T>","content":"&lt;/&gt; type typecheck&lt;T&gt; = (value: T) → ( boolean, string? ) A function that can be used to validate the type of a value. Returns a boolean and an optional error message.  "},{"title":"get<T>​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#get<T>","content":"&lt;/&gt; type get&lt;T&gt; = (...any) → T A function that returns the current value of a property.  "},{"title":"set<T>​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#set<T>","content":"&lt;/&gt; type set&lt;T&gt; = ( new_value: T, ...any ) → () A function that sets the value of a property to a new value.  "},{"title":"prop_setup<T>​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#prop_setup<T>","content":"&lt;/&gt; interface prop_setup&lt;T&gt; { init: T type_validator: typecheck&lt;T&gt; type_name: string? middleware: prop_middleware_info&lt;T&gt;? signal_security: signal_security? typestrict: boolean? } An object that contains the initial value, type validator, type name, middleware, signal security, and typestrict settings for a property. The init field is required, while the rest are optional. Fields init - The initial value of the property. type_validator - A function that validates the type of the property value. Only runs if typestrict is set to true. Optional. type_name - The name of the type of the property. Do NOT provide this field with a custom type name unless you have a custom type validator, as the validator will always return false. Optional. middleware - A table that contains initial middleware for the get and set accessors of a property. Optional. signal_security - The security level of the signal. Refer to the signal_security property of the prop class for more information. Optional.  "},{"title":"prop_middleware<T>​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#prop_middleware<T>","content":"&lt;/&gt; interface prop_middleware&lt;T&gt; { get: middleware&lt;T&gt; set: middleware&lt;T&gt; } An object that contains middleware for the get and set accessors of a property.  "},{"title":"prop_middleware_info<T>​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#prop_middleware_info<T>","content":"&lt;/&gt; interface prop_middleware_info&lt;T&gt; { get: transformer_list&lt;T&gt;? set: transformer_list&lt;T&gt;? } An optional parameter used to initialize middleware for the get and set accessors of a property. "},{"title":"Properties​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#properties","content":" "},{"title":"middleware​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#middleware","content":"&lt;/&gt; prop.middleware: prop_middleware&lt;T&gt; An interface for managing middleware for the get and set accessors. Refer to the middleware class for more information.  "},{"title":"changed​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#changed","content":"&lt;/&gt; prop.changed: var_signal A signal that fires when the property value changes.  "},{"title":"signal_security​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#signal_security","content":"&lt;/&gt; prop.signal_security: basic_prop&lt;signal_security&gt; The security level of the signal. Can be &quot;base&quot;, &quot;immutable&quot;, or &quot;restricted&quot;. When this property is set to &quot;base&quot;, the &quot;changed&quot; signal property will be set to a default signal returned from the signal.new function. When this property is set to &quot;immutable&quot;, the &quot;changed&quot; signal property will be set to the &quot;Immutable&quot; interface of the signal. When this property is set to &quot;restricted&quot;, the &quot;changed&quot; signal property will be set to the &quot;Restricted&quot; interface of the signal.  "},{"title":"type_validator​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#type_validator","content":"&lt;/&gt; prop.type_validator: basic_prop&lt;typecheck&lt;T&gt;&gt; A function that can be used to validate the type of any new value passed to the property. Returns a boolean and an optional error message. The type_validator only runs if the strict property is set to true. The validator is used after the middleware for both the get and set accessor transforms the value. It also prevents any malformed values from being set to the property. If no validator is provided and the strict property is set to true, the property will use the typeof function, comparing the type of the new value to the type of the initial value.  "},{"title":"strict​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#strict","content":"&lt;/&gt; prop.strict: basic_prop&lt;boolean&gt; A boolean value that determines whether the property should be type-checked before setting a new value.  "},{"title":"type_name​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#type_name","content":"&lt;/&gt; prop.type_name: basic_prop&lt;string&gt; The name of the type of the property. Defaults to the type of the initial value.  "},{"title":"immutable​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#immutable","content":"&lt;/&gt; prop.immutable: immutable_prop&lt;T&gt; An interface for managing an immutable property. Refer to the immutable_prop class for more information.  "},{"title":"public​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#public","content":"&lt;/&gt; prop.public: public_prop&lt;T&gt; An interface for managing a public property. Refer to the public_prop class for more information. "},{"title":"Functions​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#functions","content":" "},{"title":"get​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#get","content":"&lt;/&gt; prop:get(...: any) → T Returns the current value of the property.  "},{"title":"set​","type":1,"pageTitle":"prop","url":"/luau-props/api/prop#set","content":"&lt;/&gt; prop:set( new_value: T, ...: any ) → () Sets the value of the property to the new value. "}]