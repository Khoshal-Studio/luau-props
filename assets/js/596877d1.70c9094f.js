"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[511],{88563:e=>{e.exports=JSON.parse('{"functions":[{"name":"get","desc":"Returns the current value of the property.","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"T"}],"function_type":"method","source":{"line":18,"path":"src/docs/immutable_prop.luau"}}],"properties":[{"name":"changed","desc":"","lua_type":"var_signal","source":{"line":25,"path":"src/docs/immutable_prop.luau"}},{"name":"changed","desc":"","lua_type":"var_signal","source":{"line":35,"path":"src/docs/public_prop.luau"}}],"types":[{"name":"immutable_prop<T>","desc":"An immutable derivative of a `prop` object that cannot be changed after initialization. Contains a `get` accessor and a `changed` signal.","fields":[{"name":"get","lua_type":"get<T>","desc":""},{"name":"changed","lua_type":"var_signal","desc":""}],"source":{"line":37,"path":"src/docs/immutable_prop.luau"}}],"name":"immutable_prop","desc":"An immutable derivative of a `prop` object that cannot be changed after initialization. Contains a `get` accessor and a `changed` signal.","source":{"line":6,"path":"src/docs/immutable_prop.luau"}}')}}]);